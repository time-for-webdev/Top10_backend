# Generated by Django 4.1.7 on 2023-04-22 06:55

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('vpn', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comparision',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vpn', models.CharField(max_length=1000, unique=True)),
                ('comparison_description', models.TextField()),
                ('moneybackguarantee', models.CharField(default='', max_length=1000)),
                ('servers_or_countries', models.CharField(default='', max_length=1000)),
                ('killswitch', models.CharField(default='', max_length=1000)),
                ('number_of_device_or_licence', models.IntegerField(default=0)),
                ('mobile', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question', models.CharField(default='', max_length=500, unique=True)),
                ('Answer', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Privacy', 'Privacy'), ('Speed', 'Speed'), ('security', 'Security'), ('Newbies', 'Newbies')], default=1, max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('email', models.EmailField(max_length=1000)),
                ('Ques_comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='remark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remarks', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vpn_name', models.CharField(max_length=1000)),
                ('description', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='logo',
            field=models.ImageField(default='', upload_to='archivos'),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='offer',
            field=models.CharField(blank=True, max_length=1000, null=True),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='rating',
            field=models.DecimalField(decimal_places=1, default=0, max_digits=3, validators=[django.core.validators.MaxValueValidator(10)]),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='riben_text',
            field=models.CharField(blank=True, max_length=1000, null=True),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='user_comment',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='user_name',
            field=models.CharField(default='', max_length=1000),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='user_rating',
            field=models.DecimalField(decimal_places=1, default=0, max_digits=2, validators=[django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='website_url',
            field=models.URLField(default='', max_length=1000),
        ),
        migrations.AlterField(
            model_name='vpnlist',
            name='title',
            field=models.CharField(max_length=200, unique=True),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[['Overall Best Vpn of 2023', 'Overall Best Vpn of 2023']], max_length=100, unique=True)),
                ('upadte_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('Fifth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_5th_set', to='vpn.vpnlist')),
                ('First', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_1st_set', to='vpn.vpnlist')),
                ('Forth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_4th_set', to='vpn.vpnlist')),
                ('Second', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_2nd_set', to='vpn.vpnlist')),
                ('Seventh', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_7th_set', to='vpn.vpnlist')),
                ('Sixth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_6th_set', to='vpn.vpnlist')),
                ('Third', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_3rd_set', to='vpn.vpnlist')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[['Aruba', 'Aruba'], ['Afghanistan', 'Afghanistan'], ['Angola', 'Angola'], ['Anguilla', 'Anguilla'], ['Åland Islands', 'Åland Islands'], ['Albania', 'Albania'], ['Andorra', 'Andorra'], ['United Arab Emirates', 'United Arab Emirates'], ['Argentina', 'Argentina'], ['Armenia', 'Armenia'], ['American Samoa', 'American Samoa'], ['Antarctica', 'Antarctica'], ['French Southern Territories', 'French Southern Territories'], ['Antigua and Barbuda', 'Antigua and Barbuda'], ['Australia', 'Australia'], ['Austria', 'Austria'], ['Azerbaijan', 'Azerbaijan'], ['Burundi', 'Burundi'], ['Belgium', 'Belgium'], ['Benin', 'Benin'], ['Bonaire, Sint Eustatius and Saba', 'Bonaire, Sint Eustatius and Saba'], ['Burkina Faso', 'Burkina Faso'], ['Bangladesh', 'Bangladesh'], ['Bulgaria', 'Bulgaria'], ['Bahrain', 'Bahrain'], ['Bahamas', 'Bahamas'], ['Bosnia and Herzegovina', 'Bosnia and Herzegovina'], ['Saint Barthélemy', 'Saint Barthélemy'], ['Belarus', 'Belarus'], ['Belize', 'Belize'], ['Bermuda', 'Bermuda'], ['Bolivia, Plurinational State of', 'Bolivia, Plurinational State of'], ['Brazil', 'Brazil'], ['Barbados', 'Barbados'], ['Brunei Darussalam', 'Brunei Darussalam'], ['Bhutan', 'Bhutan'], ['Bouvet Island', 'Bouvet Island'], ['Botswana', 'Botswana'], ['Central African Republic', 'Central African Republic'], ['Canada', 'Canada'], ['Cocos (Keeling) Islands', 'Cocos (Keeling) Islands'], ['Switzerland', 'Switzerland'], ['Chile', 'Chile'], ['China', 'China'], ["Côte d'Ivoire", "Côte d'Ivoire"], ['Cameroon', 'Cameroon'], ['Congo, The Democratic Republic of the', 'Congo, The Democratic Republic of the'], ['Congo', 'Congo'], ['Cook Islands', 'Cook Islands'], ['Colombia', 'Colombia'], ['Comoros', 'Comoros'], ['Cabo Verde', 'Cabo Verde'], ['Costa Rica', 'Costa Rica'], ['Cuba', 'Cuba'], ['Curaçao', 'Curaçao'], ['Christmas Island', 'Christmas Island'], ['Cayman Islands', 'Cayman Islands'], ['Cyprus', 'Cyprus'], ['Czechia', 'Czechia'], ['Germany', 'Germany'], ['Djibouti', 'Djibouti'], ['Dominica', 'Dominica'], ['Denmark', 'Denmark'], ['Dominican Republic', 'Dominican Republic'], ['Algeria', 'Algeria'], ['Ecuador', 'Ecuador'], ['Egypt', 'Egypt'], ['Eritrea', 'Eritrea'], ['Western Sahara', 'Western Sahara'], ['Spain', 'Spain'], ['Estonia', 'Estonia'], ['Ethiopia', 'Ethiopia'], ['Finland', 'Finland'], ['Fiji', 'Fiji'], ['Falkland Islands (Malvinas)', 'Falkland Islands (Malvinas)'], ['France', 'France'], ['Faroe Islands', 'Faroe Islands'], ['Micronesia, Federated States of', 'Micronesia, Federated States of'], ['Gabon', 'Gabon'], ['United Kingdom', 'United Kingdom'], ['Georgia', 'Georgia'], ['Guernsey', 'Guernsey'], ['Ghana', 'Ghana'], ['Gibraltar', 'Gibraltar'], ['Guinea', 'Guinea'], ['Guadeloupe', 'Guadeloupe'], ['Gambia', 'Gambia'], ['Guinea-Bissau', 'Guinea-Bissau'], ['Equatorial Guinea', 'Equatorial Guinea'], ['Greece', 'Greece'], ['Grenada', 'Grenada'], ['Greenland', 'Greenland'], ['Guatemala', 'Guatemala'], ['French Guiana', 'French Guiana'], ['Guam', 'Guam'], ['Guyana', 'Guyana'], ['Hong Kong', 'Hong Kong'], ['Heard Island and McDonald Islands', 'Heard Island and McDonald Islands'], ['Honduras', 'Honduras'], ['Croatia', 'Croatia'], ['Haiti', 'Haiti'], ['Hungary', 'Hungary'], ['Indonesia', 'Indonesia'], ['Isle of Man', 'Isle of Man'], ['India', 'India'], ['British Indian Ocean Territory', 'British Indian Ocean Territory'], ['Ireland', 'Ireland'], ['Iran, Islamic Republic of', 'Iran, Islamic Republic of'], ['Iraq', 'Iraq'], ['Iceland', 'Iceland'], ['Israel', 'Israel'], ['Italy', 'Italy'], ['Jamaica', 'Jamaica'], ['Jersey', 'Jersey'], ['Jordan', 'Jordan'], ['Japan', 'Japan'], ['Kazakhstan', 'Kazakhstan'], ['Kenya', 'Kenya'], ['Kyrgyzstan', 'Kyrgyzstan'], ['Cambodia', 'Cambodia'], ['Kiribati', 'Kiribati'], ['Saint Kitts and Nevis', 'Saint Kitts and Nevis'], ['Korea, Republic of', 'Korea, Republic of'], ['Kuwait', 'Kuwait'], ["Lao People's Democratic Republic", "Lao People's Democratic Republic"], ['Lebanon', 'Lebanon'], ['Liberia', 'Liberia'], ['Libya', 'Libya'], ['Saint Lucia', 'Saint Lucia'], ['Liechtenstein', 'Liechtenstein'], ['Sri Lanka', 'Sri Lanka'], ['Lesotho', 'Lesotho'], ['Lithuania', 'Lithuania'], ['Luxembourg', 'Luxembourg'], ['Latvia', 'Latvia'], ['Macao', 'Macao'], ['Saint Martin (French part)', 'Saint Martin (French part)'], ['Morocco', 'Morocco'], ['Monaco', 'Monaco'], ['Moldova, Republic of', 'Moldova, Republic of'], ['Madagascar', 'Madagascar'], ['Maldives', 'Maldives'], ['Mexico', 'Mexico'], ['Marshall Islands', 'Marshall Islands'], ['North Macedonia', 'North Macedonia'], ['Mali', 'Mali'], ['Malta', 'Malta'], ['Myanmar', 'Myanmar'], ['Montenegro', 'Montenegro'], ['Mongolia', 'Mongolia'], ['Northern Mariana Islands', 'Northern Mariana Islands'], ['Mozambique', 'Mozambique'], ['Mauritania', 'Mauritania'], ['Montserrat', 'Montserrat'], ['Martinique', 'Martinique'], ['Mauritius', 'Mauritius'], ['Malawi', 'Malawi'], ['Malaysia', 'Malaysia'], ['Mayotte', 'Mayotte'], ['Namibia', 'Namibia'], ['New Caledonia', 'New Caledonia'], ['Niger', 'Niger'], ['Norfolk Island', 'Norfolk Island'], ['Nigeria', 'Nigeria'], ['Nicaragua', 'Nicaragua'], ['Niue', 'Niue'], ['Netherlands', 'Netherlands'], ['Norway', 'Norway'], ['Nepal', 'Nepal'], ['Nauru', 'Nauru'], ['New Zealand', 'New Zealand'], ['Oman', 'Oman'], ['Pakistan', 'Pakistan'], ['Panama', 'Panama'], ['Pitcairn', 'Pitcairn'], ['Peru', 'Peru'], ['Philippines', 'Philippines'], ['Palau', 'Palau'], ['Papua New Guinea', 'Papua New Guinea'], ['Poland', 'Poland'], ['Puerto Rico', 'Puerto Rico'], ["Korea, Democratic People's Republic of", "Korea, Democratic People's Republic of"], ['Portugal', 'Portugal'], ['Paraguay', 'Paraguay'], ['Palestine, State of', 'Palestine, State of'], ['French Polynesia', 'French Polynesia'], ['Qatar', 'Qatar'], ['Réunion', 'Réunion'], ['Romania', 'Romania'], ['Russian Federation', 'Russian Federation'], ['Rwanda', 'Rwanda'], ['Saudi Arabia', 'Saudi Arabia'], ['Sudan', 'Sudan'], ['Senegal', 'Senegal'], ['Singapore', 'Singapore'], ['South Georgia and the South Sandwich Islands', 'South Georgia and the South Sandwich Islands'], ['Saint Helena, Ascension and Tristan da Cunha', 'Saint Helena, Ascension and Tristan da Cunha'], ['Svalbard and Jan Mayen', 'Svalbard and Jan Mayen'], ['Solomon Islands', 'Solomon Islands'], ['Sierra Leone', 'Sierra Leone'], ['El Salvador', 'El Salvador'], ['San Marino', 'San Marino'], ['Somalia', 'Somalia'], ['Saint Pierre and Miquelon', 'Saint Pierre and Miquelon'], ['Serbia', 'Serbia'], ['South Sudan', 'South Sudan'], ['Sao Tome and Principe', 'Sao Tome and Principe'], ['Suriname', 'Suriname'], ['Slovakia', 'Slovakia'], ['Slovenia', 'Slovenia'], ['Sweden', 'Sweden'], ['Eswatini', 'Eswatini'], ['Sint Maarten (Dutch part)', 'Sint Maarten (Dutch part)'], ['Seychelles', 'Seychelles'], ['Syrian Arab Republic', 'Syrian Arab Republic'], ['Turks and Caicos Islands', 'Turks and Caicos Islands'], ['Chad', 'Chad'], ['Togo', 'Togo'], ['Thailand', 'Thailand'], ['Tajikistan', 'Tajikistan'], ['Tokelau', 'Tokelau'], ['Turkmenistan', 'Turkmenistan'], ['Timor-Leste', 'Timor-Leste'], ['Tonga', 'Tonga'], ['Trinidad and Tobago', 'Trinidad and Tobago'], ['Tunisia', 'Tunisia'], ['Turkey', 'Turkey'], ['Tuvalu', 'Tuvalu'], ['Taiwan, Province of China', 'Taiwan, Province of China'], ['Tanzania, United Republic of', 'Tanzania, United Republic of'], ['Uganda', 'Uganda'], ['Ukraine', 'Ukraine'], ['United States Minor Outlying Islands', 'United States Minor Outlying Islands'], ['Uruguay', 'Uruguay'], ['United States', 'United States'], ['Uzbekistan', 'Uzbekistan'], ['Holy See (Vatican City State)', 'Holy See (Vatican City State)'], ['Saint Vincent and the Grenadines', 'Saint Vincent and the Grenadines'], ['Venezuela, Bolivarian Republic of', 'Venezuela, Bolivarian Republic of'], ['Virgin Islands, British', 'Virgin Islands, British'], ['Virgin Islands, U.S.', 'Virgin Islands, U.S.'], ['Viet Nam', 'Viet Nam'], ['Vanuatu', 'Vanuatu'], ['Wallis and Futuna', 'Wallis and Futuna'], ['Samoa', 'Samoa'], ['Yemen', 'Yemen'], ['South Africa', 'South Africa'], ['Zambia', 'Zambia'], ['Zimbabwe', 'Zimbabwe']], max_length=100, unique=True)),
                ('upadte_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('Fifth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_5_set', to='vpn.vpnlist')),
                ('First', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_1_set', to='vpn.vpnlist')),
                ('Forth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_4_set', to='vpn.vpnlist')),
                ('Second', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_2_set', to='vpn.vpnlist')),
                ('Seventh', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_7_set', to='vpn.vpnlist')),
                ('Sixth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_6_set', to='vpn.vpnlist')),
                ('Third', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_3_set', to='vpn.vpnlist')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Andriod', 'Andriod'), ('iPhone&iPad', 'iPhone&iPad'), ('Mac', 'Mac'), ('Routers', 'Routers'), ('Pc', 'Pc'), ('Windows', 'Windows')], max_length=100, unique=True)),
                ('upadte_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('Fifth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_fifth_set', to='vpn.vpnlist')),
                ('First', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_first_set', to='vpn.vpnlist')),
                ('Forth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_forth_set', to='vpn.vpnlist')),
                ('Second', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_second_set', to='vpn.vpnlist')),
                ('Seventh', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_seventh_set', to='vpn.vpnlist')),
                ('Sixth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_sexth_set', to='vpn.vpnlist')),
                ('Third', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='top_ten_third_set', to='vpn.vpnlist')),
            ],
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='Comparision',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vpn.comparision'),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='feature',
            field=models.ManyToManyField(to='vpn.feature'),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='remark',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vpn.remark'),
        ),
        migrations.AddField(
            model_name='vpnlist',
            name='specification',
            field=models.ManyToManyField(to='vpn.specification'),
        ),
    ]
